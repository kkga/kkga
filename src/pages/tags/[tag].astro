---
import PageLayout from "../../layouts/PageLayout.astro";
import Listing from "../../components/Listing.jsx";
import metadata from "../../data/metadata.json";

export async function getStaticPaths({ rss }) {
  const allPages = Astro.fetchContent("../**/*.md");
  const sortedPages = allPages.sort(
    (a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf()
  );

  const allTags = new Set();
  sortedPages.map((page) => {
    page.tags && page.tags.map((tag) => allTags.add(tag.toLowerCase()));
  });

  rss({
    // The RSS Feed title, description, and custom metadata.
    title: metadata.title,
    description: metadata.description,
    customData: `<language>en-us</language>`,
    // The list of items for your RSS feed, sorted.
    items: sortedPages.map((item) => ({
      title: item.title,
      description: item.description,
      link: item.url,
      pubDate: item.date,
    })),
    // Optional: Customize where the file is written to.
    // Otherwise, defaults to "/rss.xml"
    // dest: "/rss.xml",
  });

  return Array.from(allTags).map((tag) => {
    const filteredPages = allPages.filter(
      (page) => page.tags && page.tags.includes(tag)
    );
    return {
      params: { tag },
      props: {
        pages: filteredPages,
        allTags: allTags,
      },
    };
  });
}

const { params } = Astro.request;
const { pages, allTags } = Astro.props;
const title = `#${params.tag}`;
---

<PageLayout showTitle={false} content={{ title }}>
  <Listing {title} items={pages} />
  <div class="text-sm my-8 flex flex-wrap gap-x-2 italic">
    Other tags:
    {Array.from(allTags)
      .filter((tag) => tag !== params.tag)
      .map((tag) => {
        return (
          <a key={tag} href={`/tags/${tag}`}>
            #{tag}
          </a>
        );
      })}
  </div>
</PageLayout>
