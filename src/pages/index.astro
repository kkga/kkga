---
import PageLayout from "@/layouts/PageLayout.astro";
import siteData from "../data/site.json";
import { getCollection } from "astro:content";

const work = await getCollection("work").then((work) =>
  work.sort(
    (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
  )
);

const projects = await getCollection("projects").then((projects) =>
  projects.sort(
    (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
  )
);
---

<PageLayout
  title={siteData.title}
  description={siteData.description}
  dateUpdated="2025-01-23"
>
  <p>
    Software designer focused on creating better tools for developers and
    designers. I'm passionate about systems thinking and crafting intuitive,
    efficient interfaces. Outside of work, I'm usually building side projects,
    diving into emerging tech, cycling up hills, hiking remote trails, or
    chasing mastery in FromSoftware games.
  </p>

  <h2>Work</h2>

  <ul
    class="col-[breakout] -mx-3 -my-2 gap-x-4 gap-y-2 marker:content-[''] sm:grid sm:grid-cols-2 md:grid-cols-3"
  >
    {
      work.map(({ id, data }) => (
        <li class="flex">
          <a
            href={`/work/${id}`}
            class="flex grow flex-col px-3 py-2 no-underline hover:bg-secondary/10"
          >
            <div>
              {data.title}
              <span class="block text-secondary">
                {data.role} 路 {data.timeframe}
              </span>
            </div>
            <p class="text-secondary">{data.longDescription}</p>
          </a>
        </li>
      ))
    }
  </ul>

  <h2>Projects</h2>

  <ul
    class="col-[breakout] -mx-3 -my-2 gap-x-4 gap-y-2 marker:content-[''] sm:grid sm:grid-cols-2 md:grid-cols-3"
  >
    {
      projects.map(({ id, data }) => (
        <li class="flex">
          <a
            href={`/projects/${id}`}
            class="flex grow flex-col px-3 py-2 no-underline hover:bg-secondary/10"
          >
            <span>
              {data.title}
              <span class="text-secondary">
                路{" "}
                {new Date(data.date).toLocaleDateString("en-US", {
                  year: "numeric",
                })}
              </span>
            </span>
            <p class="text-secondary">{data.description.replace(/\.$/, "")}.</p>
          </a>
        </li>
      ))
    }
  </ul>

  <h2>Contact</h2>
  <p>
    Available at <a href="mailto:me@kkga.me">me@kkga.me</a>
    <span class="text-secondary">路</span>
    <a href="https://twitter.com/kkga" target="_blank" rel="me">X</a>
    <span class="text-secondary">路</span>
    <a href="https://bsky.app/profile/kkga.me" target="_blank" rel="me"
      >Bluesky</a
    >
  </p>
</PageLayout>
