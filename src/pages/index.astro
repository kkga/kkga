---
import PageLayout from "@/layouts/PageLayout.astro";
import siteData from "../data/site.json";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

const work = await getCollection("work").then((work) =>
  work.sort(
    (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime(),
  ),
);

const projects = await getCollection("projects").then((projects) =>
  projects.sort(
    (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime(),
  ),
);
---

<PageLayout
  title={siteData.title}
  description={siteData.description}
  dateUpdated="2025-01-23"
>
  <p class="text-balance">
    Software designer focused on creating better tools for builders. I'm
    passionate about systems thinking and crafting intuitive, efficient
    interfaces.<br />
    Outside of work, I'm usually building side projects, diving into emerging tech,
    cycling up hills, hiking remote trails, or chasing mastery in FromSoftware games.
  </p>

  <ul class="list-none [&_a]:not-hover:text-secondary [&>li]:inline-block">
    <li>
      <a href="/notes">/notes</a>
    </li>
    <li>
      <a href="/books">/books</a>
    </li>
    <li>
      <a href="/dlog">/dlog</a>
    </li>
    <li>
      <a href="mailto:me@kkga.me">me@kkga.me</a>
    </li>
    <li>
      <a href="https://twitter.com/kkga_" target="_blank" rel="me"
        >X (aka Twitter)</a
      >
    </li>
    <li>
      <a href="https://bsky.app/profile/kkga.me" target="_blank" rel="me">
        Bluesky
      </a>
    </li>
  </ul>

  <h2>Work</h2>

  <ul class="col-[breakout] grid gap-5 sm:grid-cols-2 md:grid-cols-3">
    {
      work.map(({ id, data }) => (
        <li class="flex">
          <a href={`/work/${id}`} class="group bg-transparent">
            <Image
              src={data.cover}
              alt={data.title}
              class="mb-[10px] w-full object-cover"
            />
            <span class="group-hover:bg-highlight-hover">
              <span class="uppercase">{data.title}</span>
              <span>
                ({data.role} {data.timeframe})
              </span>
            </span>
            <div class="text-secondary">{data.longDescription}</div>
          </a>
        </li>
      ))
    }
  </ul>

  <h2>Projects</h2>

  <ul
    class="col-[breakout] grid grid-cols-2 gap-5 md:grid-cols-3 lg:grid-cols-4"
  >
    {
      projects.map(({ id, data }) => (
        <li class="flex">
          <a href={`/projects/${id}`} class="group bg-transparent">
            <Image
              src={data.cover}
              alt={data.title}
              class="mb-[10px] w-full object-cover"
            />
            <span class="group-hover:bg-highlight-hover">
              <span class="uppercase">{data.title}</span>
              <span>
                {`(${new Date(data.date).toLocaleDateString("en-US", { year: "numeric" })})`}
              </span>
            </span>
            <div class="text-secondary">
              {data.description.replace(/\.$/, "")}.
            </div>
          </a>
        </li>
      ))
    }
  </ul>
</PageLayout>
